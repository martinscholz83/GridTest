@page "/"
@using GridBlazor
@using GridBlazor.Pages
@using GridShared
@using GridShared.Utility
@using GridCore.Server
@using System;
@using System.Collections.Generic;
@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel.DataAnnotations.Schema;
@using System.Text.Json.Serialization;
@using Microsoft.Extensions.Primitives;
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Http;

@inject OrderService orderService
<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

@if (_task.IsCompleted)
{
    <GridComponent T="Order" Grid="@_grid"></GridComponent>
}
else
{
    <p><em>Loading...</em></p>
}

@code {
    
    

    private CGrid<Order> _grid;
    private Task _task;

    protected override async Task OnParametersSetAsync()
    {
        Action<IGridColumnCollection<Order>> columns = c =>
        {
            c.Add(o => o.OrderID);
            c.Add(o => o.CustomerID);
            c.Add(o => o.Street);
        };

        var query = new QueryDictionary<StringValues>();
        query.Add("grid-page", "2");

        var client = new GridClient<Order>(q => orderService.GetOrdersGridRows(columns, q), query, false, "ordersGrid", columns).Sortable().Filterable();
        _grid = client.Grid;

        // Set new items to grid
        _task = client.UpdateGrid();
        await _task;
    }
}

